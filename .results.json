{
  "stats": {
    "suites": 4,
    "tests": 6,
    "passes": 0,
    "pending": 0,
    "failures": 6,
    "start": "2024-07-03T01:15:25.628Z",
    "end": "2024-07-03T01:15:27.110Z",
    "duration": 1482
  },
  "tests": [
    {
      "title": "is set as Scuber",
      "fullTitle": "index.js companyName is set as Scuber",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: companyName is not defined\n    at Context.<anonymous> (test/indexTest.js:11:14)\n    at process.processImmediate (node:internal/timers:478:21)",
        "message": "companyName is not defined"
      }
    },
    {
      "title": "is defined as a const",
      "fullTitle": "index.js companyName is defined as a const",
      "duration": 6,
      "currentRetry": 0,
      "err": {
        "message": "Expected companyName to be a const: expected '// Code your solution in this file!\\nconst assert = require(\\'chai\\').assert;\\n//importing the asset module.\\nconst {comapanyName, mostProfitableNeighbourhood, companyCeo} = require(\\'.index\\');\\n//variable import\\n\\ndescribe(\\'index.js\\', function(){\\n    //test 1 --- the company name should be scuber.\\n    it(\\'should set companyName to Scuber\\',function(){\\n        assert.equal(comapanyName, \\'Scuber\\');\\n\\n    })\\n});\\n\\n//test 2 --correct defination.\\nit(\\'should define companyName as a const\\', function(){\\n    assert.match(comapanyName.toString(), /^Scuber$/);\\n\\n})\\n//The third test:-- correct defination of profitable neigbourhood.\\nit(\\'should set mostProfitableNeighbourhood to Chelsea\\', function(){\\n    assert.match(mostProfitableNeighbourhood.toString(),/^Chelsea$/);\\n\\n});\\n\\n//test 4 --using let to define.\\nit(\\'should define mostProfitableNeigghbourhood using let\\', function(){\\n    assert.match(mostProfitableNeighbourhood.toString(),/^Chelsea/)\\n;\\n});\\n\\n\\n//Test 5 -- company ceo shoould be equal to Susan Smith.\\nit(\\'should set companyCeo to Susan Smith\\', function(){\\n    assert.equal(comapanyCeo, \\'Susan Smith\\');\\n\\n});\\n\\n//test 6 -- companyCeo defination using let.\\nit(\\'companyCeo should be defined using let\\', function(){\\n    assert.match(companyCeo.toString(),/^Susan Smith$/);\\n});' to match /const companyName/",
        "showDiff": false,
        "actual": "// Code your solution in this file!\nconst assert = require('chai').assert;\n//importing the asset module.\nconst {comapanyName, mostProfitableNeighbourhood, companyCeo} = require('.index');\n//variable import\n\ndescribe('index.js', function(){\n    //test 1 --- the company name should be scuber.\n    it('should set companyName to Scuber',function(){\n        assert.equal(comapanyName, 'Scuber');\n\n    })\n});\n\n//test 2 --correct defination.\nit('should define companyName as a const', function(){\n    assert.match(comapanyName.toString(), /^Scuber$/);\n\n})\n//The third test:-- correct defination of profitable neigbourhood.\nit('should set mostProfitableNeighbourhood to Chelsea', function(){\n    assert.match(mostProfitableNeighbourhood.toString(),/^Chelsea$/);\n\n});\n\n//test 4 --using let to define.\nit('should define mostProfitableNeigghbourhood using let', function(){\n    assert.match(mostProfitableNeighbourhood.toString(),/^Chelsea/)\n;\n});\n\n\n//Test 5 -- company ceo shoould be equal to Susan Smith.\nit('should set companyCeo to Susan Smith', function(){\n    assert.equal(comapanyCeo, 'Susan Smith');\n\n});\n\n//test 6 -- companyCeo defination using let.\nit('companyCeo should be defined using let', function(){\n    assert.match(companyCeo.toString(),/^Susan Smith$/);\n});",
        "stack": "AssertionError: Expected companyName to be a const: expected '// Code your solution in this file!\\nconst assert = require(\\'chai\\').assert;\\n//importing the asset module.\\nconst {comapanyName, mostProfitableNeighbourhood, companyCeo} = require(\\'.index\\');\\n//variable import\\n\\ndescribe(\\'index.js\\', function(){\\n    //test 1 --- the company name should be scuber.\\n    it(\\'should set companyName to Scuber\\',function(){\\n        assert.equal(comapanyName, \\'Scuber\\');\\n\\n    })\\n});\\n\\n//test 2 --correct defination.\\nit(\\'should define companyName as a const\\', function(){\\n    assert.match(comapanyName.toString(), /^Scuber$/);\\n\\n})\\n//The third test:-- correct defination of profitable neigbourhood.\\nit(\\'should set mostProfitableNeighbourhood to Chelsea\\', function(){\\n    assert.match(mostProfitableNeighbourhood.toString(),/^Chelsea$/);\\n\\n});\\n\\n//test 4 --using let to define.\\nit(\\'should define mostProfitableNeigghbourhood using let\\', function(){\\n    assert.match(mostProfitableNeighbourhood.toString(),/^Chelsea/)\\n;\\n});\\n\\n\\n//Test 5 -- company ceo shoould be equal to Susan Smith.\\nit(\\'should set companyCeo to Susan Smith\\', function(){\\n    assert.equal(comapanyCeo, \\'Susan Smith\\');\\n\\n});\\n\\n//test 6 -- companyCeo defination using let.\\nit(\\'companyCeo should be defined using let\\', function(){\\n    assert.match(companyCeo.toString(),/^Susan Smith$/);\\n});' to match /const companyName/\n    at Context.<anonymous> (test/indexTest.js:15:21)\n    at process.processImmediate (node:internal/timers:478:21)"
      }
    },
    {
      "title": "is declared as equal to Chelsea",
      "fullTitle": "index.js mostProfitableNeighborhood is declared as equal to Chelsea",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: mostProfitableNeighborhood is not defined\n    at Context.<anonymous> (test/indexTest.js:21:14)\n    at process.processImmediate (node:internal/timers:478:21)",
        "message": "mostProfitableNeighborhood is not defined"
      }
    },
    {
      "title": "is defined using let",
      "fullTitle": "index.js mostProfitableNeighborhood is defined using let",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "message": "Expected mostProfitableNeighborhood to be defined using let: expected '// Code your solution in this file!\\nconst assert = require(\\'chai\\').assert;\\n//importing the asset module.\\nconst {comapanyName, mostProfitableNeighbourhood, companyCeo} = require(\\'.index\\');\\n//variable import\\n\\ndescribe(\\'index.js\\', function(){\\n    //test 1 --- the company name should be scuber.\\n    it(\\'should set companyName to Scuber\\',function(){\\n        assert.equal(comapanyName, \\'Scuber\\');\\n\\n    })\\n});\\n\\n//test 2 --correct defination.\\nit(\\'should define companyName as a const\\', function(){\\n    assert.match(comapanyName.toString(), /^Scuber$/);\\n\\n})\\n//The third test:-- correct defination of profitable neigbourhood.\\nit(\\'should set mostProfitableNeighbourhood to Chelsea\\', function(){\\n    assert.match(mostProfitableNeighbourhood.toString(),/^Chelsea$/);\\n\\n});\\n\\n//test 4 --using let to define.\\nit(\\'should define mostProfitableNeigghbourhood using let\\', function(){\\n    assert.match(mostProfitableNeighbourhood.toString(),/^Chelsea/)\\n;\\n});\\n\\n\\n//Test 5 -- company ceo shoould be equal to Susan Smith.\\nit(\\'should set companyCeo to Susan Smith\\', function(){\\n    assert.equal(comapanyCeo, \\'Susan Smith\\');\\n\\n});\\n\\n//test 6 -- companyCeo defination using let.\\nit(\\'companyCeo should be defined using let\\', function(){\\n    assert.match(companyCeo.toString(),/^Susan Smith$/);\\n});' to match /let mostProfitableNeighborhood/",
        "showDiff": false,
        "actual": "// Code your solution in this file!\nconst assert = require('chai').assert;\n//importing the asset module.\nconst {comapanyName, mostProfitableNeighbourhood, companyCeo} = require('.index');\n//variable import\n\ndescribe('index.js', function(){\n    //test 1 --- the company name should be scuber.\n    it('should set companyName to Scuber',function(){\n        assert.equal(comapanyName, 'Scuber');\n\n    })\n});\n\n//test 2 --correct defination.\nit('should define companyName as a const', function(){\n    assert.match(comapanyName.toString(), /^Scuber$/);\n\n})\n//The third test:-- correct defination of profitable neigbourhood.\nit('should set mostProfitableNeighbourhood to Chelsea', function(){\n    assert.match(mostProfitableNeighbourhood.toString(),/^Chelsea$/);\n\n});\n\n//test 4 --using let to define.\nit('should define mostProfitableNeigghbourhood using let', function(){\n    assert.match(mostProfitableNeighbourhood.toString(),/^Chelsea/)\n;\n});\n\n\n//Test 5 -- company ceo shoould be equal to Susan Smith.\nit('should set companyCeo to Susan Smith', function(){\n    assert.equal(comapanyCeo, 'Susan Smith');\n\n});\n\n//test 6 -- companyCeo defination using let.\nit('companyCeo should be defined using let', function(){\n    assert.match(companyCeo.toString(),/^Susan Smith$/);\n});",
        "stack": "AssertionError: Expected mostProfitableNeighborhood to be defined using let: expected '// Code your solution in this file!\\nconst assert = require(\\'chai\\').assert;\\n//importing the asset module.\\nconst {comapanyName, mostProfitableNeighbourhood, companyCeo} = require(\\'.index\\');\\n//variable import\\n\\ndescribe(\\'index.js\\', function(){\\n    //test 1 --- the company name should be scuber.\\n    it(\\'should set companyName to Scuber\\',function(){\\n        assert.equal(comapanyName, \\'Scuber\\');\\n\\n    })\\n});\\n\\n//test 2 --correct defination.\\nit(\\'should define companyName as a const\\', function(){\\n    assert.match(comapanyName.toString(), /^Scuber$/);\\n\\n})\\n//The third test:-- correct defination of profitable neigbourhood.\\nit(\\'should set mostProfitableNeighbourhood to Chelsea\\', function(){\\n    assert.match(mostProfitableNeighbourhood.toString(),/^Chelsea$/);\\n\\n});\\n\\n//test 4 --using let to define.\\nit(\\'should define mostProfitableNeigghbourhood using let\\', function(){\\n    assert.match(mostProfitableNeighbourhood.toString(),/^Chelsea/)\\n;\\n});\\n\\n\\n//Test 5 -- company ceo shoould be equal to Susan Smith.\\nit(\\'should set companyCeo to Susan Smith\\', function(){\\n    assert.equal(comapanyCeo, \\'Susan Smith\\');\\n\\n});\\n\\n//test 6 -- companyCeo defination using let.\\nit(\\'companyCeo should be defined using let\\', function(){\\n    assert.match(companyCeo.toString(),/^Susan Smith$/);\\n});' to match /let mostProfitableNeighborhood/\n    at Context.<anonymous> (test/indexTest.js:25:21)\n    at process.processImmediate (node:internal/timers:478:21)"
      }
    },
    {
      "title": "is declared as equal to Susan Smith",
      "fullTitle": "index.js companyCeo is declared as equal to Susan Smith",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: companyCeo is not defined\n    at Context.<anonymous> (test/indexTest.js:31:14)\n    at process.processImmediate (node:internal/timers:478:21)",
        "message": "companyCeo is not defined"
      }
    },
    {
      "title": "is defined using let",
      "fullTitle": "index.js companyCeo is defined using let",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "Expected companyCeo to be defined using let: expected '// Code your solution in this file!\\nconst assert = require(\\'chai\\').assert;\\n//importing the asset module.\\nconst {comapanyName, mostProfitableNeighbourhood, companyCeo} = require(\\'.index\\');\\n//variable import\\n\\ndescribe(\\'index.js\\', function(){\\n    //test 1 --- the company name should be scuber.\\n    it(\\'should set companyName to Scuber\\',function(){\\n        assert.equal(comapanyName, \\'Scuber\\');\\n\\n    })\\n});\\n\\n//test 2 --correct defination.\\nit(\\'should define companyName as a const\\', function(){\\n    assert.match(comapanyName.toString(), /^Scuber$/);\\n\\n})\\n//The third test:-- correct defination of profitable neigbourhood.\\nit(\\'should set mostProfitableNeighbourhood to Chelsea\\', function(){\\n    assert.match(mostProfitableNeighbourhood.toString(),/^Chelsea$/);\\n\\n});\\n\\n//test 4 --using let to define.\\nit(\\'should define mostProfitableNeigghbourhood using let\\', function(){\\n    assert.match(mostProfitableNeighbourhood.toString(),/^Chelsea/)\\n;\\n});\\n\\n\\n//Test 5 -- company ceo shoould be equal to Susan Smith.\\nit(\\'should set companyCeo to Susan Smith\\', function(){\\n    assert.equal(comapanyCeo, \\'Susan Smith\\');\\n\\n});\\n\\n//test 6 -- companyCeo defination using let.\\nit(\\'companyCeo should be defined using let\\', function(){\\n    assert.match(companyCeo.toString(),/^Susan Smith$/);\\n});' to match /let companyCeo/",
        "showDiff": false,
        "actual": "// Code your solution in this file!\nconst assert = require('chai').assert;\n//importing the asset module.\nconst {comapanyName, mostProfitableNeighbourhood, companyCeo} = require('.index');\n//variable import\n\ndescribe('index.js', function(){\n    //test 1 --- the company name should be scuber.\n    it('should set companyName to Scuber',function(){\n        assert.equal(comapanyName, 'Scuber');\n\n    })\n});\n\n//test 2 --correct defination.\nit('should define companyName as a const', function(){\n    assert.match(comapanyName.toString(), /^Scuber$/);\n\n})\n//The third test:-- correct defination of profitable neigbourhood.\nit('should set mostProfitableNeighbourhood to Chelsea', function(){\n    assert.match(mostProfitableNeighbourhood.toString(),/^Chelsea$/);\n\n});\n\n//test 4 --using let to define.\nit('should define mostProfitableNeigghbourhood using let', function(){\n    assert.match(mostProfitableNeighbourhood.toString(),/^Chelsea/)\n;\n});\n\n\n//Test 5 -- company ceo shoould be equal to Susan Smith.\nit('should set companyCeo to Susan Smith', function(){\n    assert.equal(comapanyCeo, 'Susan Smith');\n\n});\n\n//test 6 -- companyCeo defination using let.\nit('companyCeo should be defined using let', function(){\n    assert.match(companyCeo.toString(),/^Susan Smith$/);\n});",
        "stack": "AssertionError: Expected companyCeo to be defined using let: expected '// Code your solution in this file!\\nconst assert = require(\\'chai\\').assert;\\n//importing the asset module.\\nconst {comapanyName, mostProfitableNeighbourhood, companyCeo} = require(\\'.index\\');\\n//variable import\\n\\ndescribe(\\'index.js\\', function(){\\n    //test 1 --- the company name should be scuber.\\n    it(\\'should set companyName to Scuber\\',function(){\\n        assert.equal(comapanyName, \\'Scuber\\');\\n\\n    })\\n});\\n\\n//test 2 --correct defination.\\nit(\\'should define companyName as a const\\', function(){\\n    assert.match(comapanyName.toString(), /^Scuber$/);\\n\\n})\\n//The third test:-- correct defination of profitable neigbourhood.\\nit(\\'should set mostProfitableNeighbourhood to Chelsea\\', function(){\\n    assert.match(mostProfitableNeighbourhood.toString(),/^Chelsea$/);\\n\\n});\\n\\n//test 4 --using let to define.\\nit(\\'should define mostProfitableNeigghbourhood using let\\', function(){\\n    assert.match(mostProfitableNeighbourhood.toString(),/^Chelsea/)\\n;\\n});\\n\\n\\n//Test 5 -- company ceo shoould be equal to Susan Smith.\\nit(\\'should set companyCeo to Susan Smith\\', function(){\\n    assert.equal(comapanyCeo, \\'Susan Smith\\');\\n\\n});\\n\\n//test 6 -- companyCeo defination using let.\\nit(\\'companyCeo should be defined using let\\', function(){\\n    assert.match(companyCeo.toString(),/^Susan Smith$/);\\n});' to match /let companyCeo/\n    at Context.<anonymous> (test/indexTest.js:35:21)\n    at process.processImmediate (node:internal/timers:478:21)"
      }
    }
  ],
  "pending": [],
  "failures": [
    {
      "title": "is set as Scuber",
      "fullTitle": "index.js companyName is set as Scuber",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: companyName is not defined\n    at Context.<anonymous> (test/indexTest.js:11:14)\n    at process.processImmediate (node:internal/timers:478:21)",
        "message": "companyName is not defined"
      }
    },
    {
      "title": "is defined as a const",
      "fullTitle": "index.js companyName is defined as a const",
      "duration": 6,
      "currentRetry": 0,
      "err": {
        "message": "Expected companyName to be a const: expected '// Code your solution in this file!\\nconst assert = require(\\'chai\\').assert;\\n//importing the asset module.\\nconst {comapanyName, mostProfitableNeighbourhood, companyCeo} = require(\\'.index\\');\\n//variable import\\n\\ndescribe(\\'index.js\\', function(){\\n    //test 1 --- the company name should be scuber.\\n    it(\\'should set companyName to Scuber\\',function(){\\n        assert.equal(comapanyName, \\'Scuber\\');\\n\\n    })\\n});\\n\\n//test 2 --correct defination.\\nit(\\'should define companyName as a const\\', function(){\\n    assert.match(comapanyName.toString(), /^Scuber$/);\\n\\n})\\n//The third test:-- correct defination of profitable neigbourhood.\\nit(\\'should set mostProfitableNeighbourhood to Chelsea\\', function(){\\n    assert.match(mostProfitableNeighbourhood.toString(),/^Chelsea$/);\\n\\n});\\n\\n//test 4 --using let to define.\\nit(\\'should define mostProfitableNeigghbourhood using let\\', function(){\\n    assert.match(mostProfitableNeighbourhood.toString(),/^Chelsea/)\\n;\\n});\\n\\n\\n//Test 5 -- company ceo shoould be equal to Susan Smith.\\nit(\\'should set companyCeo to Susan Smith\\', function(){\\n    assert.equal(comapanyCeo, \\'Susan Smith\\');\\n\\n});\\n\\n//test 6 -- companyCeo defination using let.\\nit(\\'companyCeo should be defined using let\\', function(){\\n    assert.match(companyCeo.toString(),/^Susan Smith$/);\\n});' to match /const companyName/",
        "showDiff": false,
        "actual": "// Code your solution in this file!\nconst assert = require('chai').assert;\n//importing the asset module.\nconst {comapanyName, mostProfitableNeighbourhood, companyCeo} = require('.index');\n//variable import\n\ndescribe('index.js', function(){\n    //test 1 --- the company name should be scuber.\n    it('should set companyName to Scuber',function(){\n        assert.equal(comapanyName, 'Scuber');\n\n    })\n});\n\n//test 2 --correct defination.\nit('should define companyName as a const', function(){\n    assert.match(comapanyName.toString(), /^Scuber$/);\n\n})\n//The third test:-- correct defination of profitable neigbourhood.\nit('should set mostProfitableNeighbourhood to Chelsea', function(){\n    assert.match(mostProfitableNeighbourhood.toString(),/^Chelsea$/);\n\n});\n\n//test 4 --using let to define.\nit('should define mostProfitableNeigghbourhood using let', function(){\n    assert.match(mostProfitableNeighbourhood.toString(),/^Chelsea/)\n;\n});\n\n\n//Test 5 -- company ceo shoould be equal to Susan Smith.\nit('should set companyCeo to Susan Smith', function(){\n    assert.equal(comapanyCeo, 'Susan Smith');\n\n});\n\n//test 6 -- companyCeo defination using let.\nit('companyCeo should be defined using let', function(){\n    assert.match(companyCeo.toString(),/^Susan Smith$/);\n});",
        "stack": "AssertionError: Expected companyName to be a const: expected '// Code your solution in this file!\\nconst assert = require(\\'chai\\').assert;\\n//importing the asset module.\\nconst {comapanyName, mostProfitableNeighbourhood, companyCeo} = require(\\'.index\\');\\n//variable import\\n\\ndescribe(\\'index.js\\', function(){\\n    //test 1 --- the company name should be scuber.\\n    it(\\'should set companyName to Scuber\\',function(){\\n        assert.equal(comapanyName, \\'Scuber\\');\\n\\n    })\\n});\\n\\n//test 2 --correct defination.\\nit(\\'should define companyName as a const\\', function(){\\n    assert.match(comapanyName.toString(), /^Scuber$/);\\n\\n})\\n//The third test:-- correct defination of profitable neigbourhood.\\nit(\\'should set mostProfitableNeighbourhood to Chelsea\\', function(){\\n    assert.match(mostProfitableNeighbourhood.toString(),/^Chelsea$/);\\n\\n});\\n\\n//test 4 --using let to define.\\nit(\\'should define mostProfitableNeigghbourhood using let\\', function(){\\n    assert.match(mostProfitableNeighbourhood.toString(),/^Chelsea/)\\n;\\n});\\n\\n\\n//Test 5 -- company ceo shoould be equal to Susan Smith.\\nit(\\'should set companyCeo to Susan Smith\\', function(){\\n    assert.equal(comapanyCeo, \\'Susan Smith\\');\\n\\n});\\n\\n//test 6 -- companyCeo defination using let.\\nit(\\'companyCeo should be defined using let\\', function(){\\n    assert.match(companyCeo.toString(),/^Susan Smith$/);\\n});' to match /const companyName/\n    at Context.<anonymous> (test/indexTest.js:15:21)\n    at process.processImmediate (node:internal/timers:478:21)"
      }
    },
    {
      "title": "is declared as equal to Chelsea",
      "fullTitle": "index.js mostProfitableNeighborhood is declared as equal to Chelsea",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: mostProfitableNeighborhood is not defined\n    at Context.<anonymous> (test/indexTest.js:21:14)\n    at process.processImmediate (node:internal/timers:478:21)",
        "message": "mostProfitableNeighborhood is not defined"
      }
    },
    {
      "title": "is defined using let",
      "fullTitle": "index.js mostProfitableNeighborhood is defined using let",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "message": "Expected mostProfitableNeighborhood to be defined using let: expected '// Code your solution in this file!\\nconst assert = require(\\'chai\\').assert;\\n//importing the asset module.\\nconst {comapanyName, mostProfitableNeighbourhood, companyCeo} = require(\\'.index\\');\\n//variable import\\n\\ndescribe(\\'index.js\\', function(){\\n    //test 1 --- the company name should be scuber.\\n    it(\\'should set companyName to Scuber\\',function(){\\n        assert.equal(comapanyName, \\'Scuber\\');\\n\\n    })\\n});\\n\\n//test 2 --correct defination.\\nit(\\'should define companyName as a const\\', function(){\\n    assert.match(comapanyName.toString(), /^Scuber$/);\\n\\n})\\n//The third test:-- correct defination of profitable neigbourhood.\\nit(\\'should set mostProfitableNeighbourhood to Chelsea\\', function(){\\n    assert.match(mostProfitableNeighbourhood.toString(),/^Chelsea$/);\\n\\n});\\n\\n//test 4 --using let to define.\\nit(\\'should define mostProfitableNeigghbourhood using let\\', function(){\\n    assert.match(mostProfitableNeighbourhood.toString(),/^Chelsea/)\\n;\\n});\\n\\n\\n//Test 5 -- company ceo shoould be equal to Susan Smith.\\nit(\\'should set companyCeo to Susan Smith\\', function(){\\n    assert.equal(comapanyCeo, \\'Susan Smith\\');\\n\\n});\\n\\n//test 6 -- companyCeo defination using let.\\nit(\\'companyCeo should be defined using let\\', function(){\\n    assert.match(companyCeo.toString(),/^Susan Smith$/);\\n});' to match /let mostProfitableNeighborhood/",
        "showDiff": false,
        "actual": "// Code your solution in this file!\nconst assert = require('chai').assert;\n//importing the asset module.\nconst {comapanyName, mostProfitableNeighbourhood, companyCeo} = require('.index');\n//variable import\n\ndescribe('index.js', function(){\n    //test 1 --- the company name should be scuber.\n    it('should set companyName to Scuber',function(){\n        assert.equal(comapanyName, 'Scuber');\n\n    })\n});\n\n//test 2 --correct defination.\nit('should define companyName as a const', function(){\n    assert.match(comapanyName.toString(), /^Scuber$/);\n\n})\n//The third test:-- correct defination of profitable neigbourhood.\nit('should set mostProfitableNeighbourhood to Chelsea', function(){\n    assert.match(mostProfitableNeighbourhood.toString(),/^Chelsea$/);\n\n});\n\n//test 4 --using let to define.\nit('should define mostProfitableNeigghbourhood using let', function(){\n    assert.match(mostProfitableNeighbourhood.toString(),/^Chelsea/)\n;\n});\n\n\n//Test 5 -- company ceo shoould be equal to Susan Smith.\nit('should set companyCeo to Susan Smith', function(){\n    assert.equal(comapanyCeo, 'Susan Smith');\n\n});\n\n//test 6 -- companyCeo defination using let.\nit('companyCeo should be defined using let', function(){\n    assert.match(companyCeo.toString(),/^Susan Smith$/);\n});",
        "stack": "AssertionError: Expected mostProfitableNeighborhood to be defined using let: expected '// Code your solution in this file!\\nconst assert = require(\\'chai\\').assert;\\n//importing the asset module.\\nconst {comapanyName, mostProfitableNeighbourhood, companyCeo} = require(\\'.index\\');\\n//variable import\\n\\ndescribe(\\'index.js\\', function(){\\n    //test 1 --- the company name should be scuber.\\n    it(\\'should set companyName to Scuber\\',function(){\\n        assert.equal(comapanyName, \\'Scuber\\');\\n\\n    })\\n});\\n\\n//test 2 --correct defination.\\nit(\\'should define companyName as a const\\', function(){\\n    assert.match(comapanyName.toString(), /^Scuber$/);\\n\\n})\\n//The third test:-- correct defination of profitable neigbourhood.\\nit(\\'should set mostProfitableNeighbourhood to Chelsea\\', function(){\\n    assert.match(mostProfitableNeighbourhood.toString(),/^Chelsea$/);\\n\\n});\\n\\n//test 4 --using let to define.\\nit(\\'should define mostProfitableNeigghbourhood using let\\', function(){\\n    assert.match(mostProfitableNeighbourhood.toString(),/^Chelsea/)\\n;\\n});\\n\\n\\n//Test 5 -- company ceo shoould be equal to Susan Smith.\\nit(\\'should set companyCeo to Susan Smith\\', function(){\\n    assert.equal(comapanyCeo, \\'Susan Smith\\');\\n\\n});\\n\\n//test 6 -- companyCeo defination using let.\\nit(\\'companyCeo should be defined using let\\', function(){\\n    assert.match(companyCeo.toString(),/^Susan Smith$/);\\n});' to match /let mostProfitableNeighborhood/\n    at Context.<anonymous> (test/indexTest.js:25:21)\n    at process.processImmediate (node:internal/timers:478:21)"
      }
    },
    {
      "title": "is declared as equal to Susan Smith",
      "fullTitle": "index.js companyCeo is declared as equal to Susan Smith",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: companyCeo is not defined\n    at Context.<anonymous> (test/indexTest.js:31:14)\n    at process.processImmediate (node:internal/timers:478:21)",
        "message": "companyCeo is not defined"
      }
    },
    {
      "title": "is defined using let",
      "fullTitle": "index.js companyCeo is defined using let",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "message": "Expected companyCeo to be defined using let: expected '// Code your solution in this file!\\nconst assert = require(\\'chai\\').assert;\\n//importing the asset module.\\nconst {comapanyName, mostProfitableNeighbourhood, companyCeo} = require(\\'.index\\');\\n//variable import\\n\\ndescribe(\\'index.js\\', function(){\\n    //test 1 --- the company name should be scuber.\\n    it(\\'should set companyName to Scuber\\',function(){\\n        assert.equal(comapanyName, \\'Scuber\\');\\n\\n    })\\n});\\n\\n//test 2 --correct defination.\\nit(\\'should define companyName as a const\\', function(){\\n    assert.match(comapanyName.toString(), /^Scuber$/);\\n\\n})\\n//The third test:-- correct defination of profitable neigbourhood.\\nit(\\'should set mostProfitableNeighbourhood to Chelsea\\', function(){\\n    assert.match(mostProfitableNeighbourhood.toString(),/^Chelsea$/);\\n\\n});\\n\\n//test 4 --using let to define.\\nit(\\'should define mostProfitableNeigghbourhood using let\\', function(){\\n    assert.match(mostProfitableNeighbourhood.toString(),/^Chelsea/)\\n;\\n});\\n\\n\\n//Test 5 -- company ceo shoould be equal to Susan Smith.\\nit(\\'should set companyCeo to Susan Smith\\', function(){\\n    assert.equal(comapanyCeo, \\'Susan Smith\\');\\n\\n});\\n\\n//test 6 -- companyCeo defination using let.\\nit(\\'companyCeo should be defined using let\\', function(){\\n    assert.match(companyCeo.toString(),/^Susan Smith$/);\\n});' to match /let companyCeo/",
        "showDiff": false,
        "actual": "// Code your solution in this file!\nconst assert = require('chai').assert;\n//importing the asset module.\nconst {comapanyName, mostProfitableNeighbourhood, companyCeo} = require('.index');\n//variable import\n\ndescribe('index.js', function(){\n    //test 1 --- the company name should be scuber.\n    it('should set companyName to Scuber',function(){\n        assert.equal(comapanyName, 'Scuber');\n\n    })\n});\n\n//test 2 --correct defination.\nit('should define companyName as a const', function(){\n    assert.match(comapanyName.toString(), /^Scuber$/);\n\n})\n//The third test:-- correct defination of profitable neigbourhood.\nit('should set mostProfitableNeighbourhood to Chelsea', function(){\n    assert.match(mostProfitableNeighbourhood.toString(),/^Chelsea$/);\n\n});\n\n//test 4 --using let to define.\nit('should define mostProfitableNeigghbourhood using let', function(){\n    assert.match(mostProfitableNeighbourhood.toString(),/^Chelsea/)\n;\n});\n\n\n//Test 5 -- company ceo shoould be equal to Susan Smith.\nit('should set companyCeo to Susan Smith', function(){\n    assert.equal(comapanyCeo, 'Susan Smith');\n\n});\n\n//test 6 -- companyCeo defination using let.\nit('companyCeo should be defined using let', function(){\n    assert.match(companyCeo.toString(),/^Susan Smith$/);\n});",
        "stack": "AssertionError: Expected companyCeo to be defined using let: expected '// Code your solution in this file!\\nconst assert = require(\\'chai\\').assert;\\n//importing the asset module.\\nconst {comapanyName, mostProfitableNeighbourhood, companyCeo} = require(\\'.index\\');\\n//variable import\\n\\ndescribe(\\'index.js\\', function(){\\n    //test 1 --- the company name should be scuber.\\n    it(\\'should set companyName to Scuber\\',function(){\\n        assert.equal(comapanyName, \\'Scuber\\');\\n\\n    })\\n});\\n\\n//test 2 --correct defination.\\nit(\\'should define companyName as a const\\', function(){\\n    assert.match(comapanyName.toString(), /^Scuber$/);\\n\\n})\\n//The third test:-- correct defination of profitable neigbourhood.\\nit(\\'should set mostProfitableNeighbourhood to Chelsea\\', function(){\\n    assert.match(mostProfitableNeighbourhood.toString(),/^Chelsea$/);\\n\\n});\\n\\n//test 4 --using let to define.\\nit(\\'should define mostProfitableNeigghbourhood using let\\', function(){\\n    assert.match(mostProfitableNeighbourhood.toString(),/^Chelsea/)\\n;\\n});\\n\\n\\n//Test 5 -- company ceo shoould be equal to Susan Smith.\\nit(\\'should set companyCeo to Susan Smith\\', function(){\\n    assert.equal(comapanyCeo, \\'Susan Smith\\');\\n\\n});\\n\\n//test 6 -- companyCeo defination using let.\\nit(\\'companyCeo should be defined using let\\', function(){\\n    assert.match(companyCeo.toString(),/^Susan Smith$/);\\n});' to match /let companyCeo/\n    at Context.<anonymous> (test/indexTest.js:35:21)\n    at process.processImmediate (node:internal/timers:478:21)"
      }
    }
  ],
  "passes": []
}